openapi: 3.0.0
info:
  title: Social Protection Program MIS API
  version: 1.0.0
  description: API documentation for the Social Protection Program Management Information System

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://mis.fly.dev
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Program:
      type: object
      properties:
        name:
          type: string
        description:
          type: string

    Household:
      type: object
      properties:
        program_id:
          type: integer
        sublocation_id:
          type: integer
        head_first_name:
          type: string
        head_last_name:
          type: string
        head_id_number:
          type: string
        phone:
          type: string

    Member:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
          format: date
        relationship:
          type: string
          enum: [Spouse, Son, Daughter, Parent, Other]

    County:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Nairobi
        code:
          type: string
          example: NAI
        subcounties:
          type: array
          items:
            $ref: '#/components/schemas/Subcounty'

    Subcounty:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Westlands
        code:
          type: string
          example: WST
        countyId:
          type: integer
          example: 1
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'

    Location:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        sublocations:
          type: array
          items:
            $ref: '#/components/schemas/Sublocation'

    Sublocation:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string

paths:
  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                role:
                  type: string
      responses:
        201:
          description: User registered successfully

  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful

  /api/v1/programs:
    get:
      tags:
        - Programs
      summary: Get all programs
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of programs
    post:
      summary: Create new program
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        201:
          description: Program created successfully

  /api/v1/households:
    get:
      tags:
        - Households
      summary: Get all households
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of households
    post:
      summary: Create new household
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Household'
      responses:
        201:
          description: Household created successfully

  /api/v1/households/{householdId}/members:
    get:
      tags:
        - Members
      summary: Get household members
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: householdId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of household members
    post:
      summary: Add household member
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: householdId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        201:
          description: Member added successfully

  /api/v1/locations/counties:
    get:
      summary: Get all counties with their hierarchical data
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of counties with their subcounties, locations, and sublocations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        code:
                          type: string
                        subcounties:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              code:
                                type: string
                              locations:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Location'

  /api/v1/locations/counties/{countyId}/subcounties:
    get:
      summary: Get subcounties for a specific county
      security:
        - BearerAuth: []
      parameters:
        - name: countyId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of subcounties with their locations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        code:
                          type: string
                        locations:
                          type: array
                          items:
                            $ref: '#/components/schemas/Location'

  /api/v1/locations/subcounties/{subcountyId}/locations:
    get:
      summary: Get locations for a specific subcounty
      security:
        - BearerAuth: []
      parameters:
        - name: subcountyId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of locations with their sublocations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'

  /api/v1/locations/locations/{locationId}/sublocations:
    get:
      summary: Get sublocations for a specific location
      security:
        - BearerAuth: []
      parameters:
        - name: locationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of sublocations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sublocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        '401':
          $ref: '#/components/responses/Unauthorized' 