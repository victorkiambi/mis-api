generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  name      String   @db.VarChar(100)
  role      String   @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Program {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(100)
  description String?
  households  Household[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("programs")
}

model GeoCounty {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(50)
  code         String         @unique @db.VarChar(10)
  subcounties  GeoSubcounty[]

  @@map("geo_counties")
}

model GeoSubcounty {
  id         Int           @id @default(autoincrement())
  countyId   Int
  name       String        @db.VarChar(50)
  code       String        @unique @db.VarChar(10)
  county     GeoCounty     @relation(fields: [countyId], references: [id])
  locations  GeoLocation[]

  @@map("geo_subcounties")
}

model GeoLocation {
  id            Int             @id @default(autoincrement())
  subcountyId   Int
  name          String          @db.VarChar(50)
  code          String          @unique @db.VarChar(10)
  subcounty     GeoSubcounty    @relation(fields: [subcountyId], references: [id])
  sublocations  GeoSublocation[]

  @@map("geo_locations")
}

model GeoSublocation {
  id          Int          @id @default(autoincrement())
  locationId  Int
  name        String       @db.VarChar(50)
  code        String       @unique @db.VarChar(10)
  location    GeoLocation  @relation(fields: [locationId], references: [id])
  households  Household[]

  @@map("geo_sublocations")
}

model Household {
  id              Int               @id @default(autoincrement())
  programId       Int
  sublocationId   Int
  headFirstName   String            @db.VarChar(50)
  headLastName    String            @db.VarChar(50)
  headIdNumber    String            @unique @db.VarChar(20)
  encryptedPhone  String            @db.VarChar(255)
  program         Program           @relation(fields: [programId], references: [id])
  sublocation     GeoSublocation    @relation(fields: [sublocationId], references: [id])
  members         HouseholdMember[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  @@map("households")
}

model HouseholdMember {
  id           Int       @id @default(autoincrement())
  householdId  Int
  firstName    String    @db.VarChar(50)
  lastName     String    @db.VarChar(50)
  dateOfBirth  DateTime
  relationship String    @db.VarChar(30)
  household    Household @relation(fields: [householdId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("household_members")
} 